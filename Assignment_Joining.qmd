---
title: "Joining Assignment"
author: "Hannah Loder"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
  html:
    self-contained: true
    toc: true
    toc-location: left
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse)
library(here)

```

# Load the datasets

```{r}

counties_demographics <- readRDS(here("data", "counties_demographics.rds"))
counties_elexresults <- readRDS(here("data", "counties_elexresults.rds"))
counties_rural_urban_suburban <- readRDS(here("data", "counties_rural_urban_suburban.rds"))



```

# Exercises

1)  

Join together the election results and urban/suburban/rural tables above, and then use the merged table to:

-   filter for just Virginia

-   group_by and summarize to calculate the mean pct of Trump 2020 vote (`pct_r_2020`) by urban/rural categories (`rural_urban`)

```{r}

full_join(counties_elexresults, counties_rural_urban_suburban) %>% 
  filter(state_code == "VA") %>% 
  group_by(rural_urban) %>% 
  summarise(avg_pct_trump = mean(pct_r_2020))

# I used the full join function to keep everything, and then I filtered by VA's state code. 
# Then I used the group and summarise functions to get the average percent Trump vote in 
# urban and rural categories. 
```

2)  

Using the joined election results / urban/suburban/rural table created above:

-   filter for just Virginia

-   count up how many counties were won by party in 2020 (`winner_2020`) by urban/rural categories

```{r}

full_join(counties_elexresults, counties_rural_urban_suburban) %>% 
  filter(state_code == "VA") %>% 
  group_by(rural_urban) %>% 
  count(winner_2020, name = "count")

# I used the same code from above, and I counted the winner_2020 category instead of 
# finding the percent like the last question. 


```

3)  

Join together the election results and demographics tables above, and then use the joined table to:

-   filter for just Florida

-   group/summarize to calculate the mean pct of Trump 2020 vote in the counties above or below national average for college graduates (`pct_ed_college_all_abovebelow_natl`)

```{r}

full_join(counties_elexresults, counties_demographics) %>% 
  filter(state_code == "FL") %>% 
  group_by(pct_ed_college_all_abovebelow_natl) %>% 
  summarise(average = mean(pct_r_2020))

# I used the full join function and filtered for FL. Then I grouped by the national above/below 
# average for college graduates and summarized using the mean pct Trump received. 

```

4)  

Using the joined table you made above:

-   group/summarize to calculate the mean pct of Trump 2020 vote by counties above or below the national average for college graduates (`pct_ed_college_all_abovebelow_natl`).

    Note we're looking for the entire country here.

```{r}

full_join(counties_elexresults, counties_demographics) %>% 
  group_by(pct_ed_college_all_abovebelow_natl) %>% 
  summarise(average = mean(pct_r_2020))

# I used the same code as above and just removed the filter for state. 

```

Now using the joined datasets above, come up with two groupings you find interesting or newsworthy in a particular state, and replicate the steps above them them instead.

5)  

```{r}

full_join(counties_elexresults, counties_rural_urban_suburban) %>% 
  filter(state_code == "AR") %>% 
  group_by(rural_urban) %>% 
  summarise(avg_pct_d = mean(pct_d_2020))

# I wanted to see the percentage of democrat votes by rural/urban voters in AR. I adapted
# the code above to look at this. 

```

6)  

```{r}

inner_join(counties_elexresults, counties_demographics) %>% 
  filter(state_code == "MO") %>% 
  filter(county == "Greene") %>% 
  group_by(pct_d_2020, pct_r_2020) %>% 
  summarise(n())
  
  
# I wanted to isolate my county in Missouri to look at the percent of the democrat and 
# republican votes in 2020. I filtered by state and county. Then I grouped by pct democrat
# and percent republican. Then I used summarise to be able to isolate them. 

```

7)  Extra credit

Up until now we've joined two tables together. But we actually have three tables in this project. How might we join all three together into a single table, so all the measures for each county are combined in one place? (Hint: you can do this is multiple steps, doesn't have to be one step only.)

```{r}



demog_elex <- full_join(counties_demographics, counties_elexresults) 

full_join(demog_elex, counties_rural_urban_suburban)

# I did multiple steps. I combined two datasets and renamed it. Then I used that new dataset
# to join with the other dataset. 

```
